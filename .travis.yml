language: rust
cache: cargo
rust:
- stable
- nightly
env:
- ARCH=x86_64_linux
- ARCH=arm_linux TARGET=arm-linux-gnueabi RUST_TARGET=arm-unknown-linux-gnueabi
- ARCH=aarch64_linux TARGET=aarch64-linux-gnu RUST_TARGET=aarch64-unknown-linux-gnu
- ARCH=arm_android TARGET=arm-linux-androideabi RUST_TARGET=armv7-linux-androideabi
  NDK_API=19 NDK_ARCH=arm
- ARCH=aarch64_android TARGET=aarch64-linux-android RUST_TARGET=aarch64-linux-android
  NDK_API=21 NDK_ARCH=arm64
- ARCH=x86_64_android TARGET=x86_64-linux-android RUST_TARGET=x86_64-linux-android
  NDK_API=21 NDK_ARCH=x86_64
- ARCH=x86_64_windows_mingw TARGET=x86_64-windows-gnu RUST_TARGET=x86_64-pc-windows-gnu
matrix:
  include:
  - os: osx
    rust: stable
    env: ARCH=x86_64_macos
  - os: windows
    rust: stable
    env: ARCH=x86_64_windows_msvc
    before_install:
    install:
    - choco install nsis
    before_script:
    before_deploy:
    script: "./travis/windows_installer.sh"
  - name: cargo test
    rust: stable
    before_install:
    install:
    before_script:
    script:
    - RUST_BACKTRACE=1 cargo test
  - name: bogo test
    rust: stable
    before_install:
    install:
    before_script:
    script:
    - cd bogo && ./runme
  - name: cargo-clippy
    rust: stable
    env: CLIPPY=yes
    before_install:
    install:
    before_script:
    - rustup component add clippy-preview
    script:
    - cargo clippy
  - name: cargo-fmt and cargo-tarpaulin
    sudo: required
    rust: stable
    env: COV=yes
    before_install:
    install:
    before_script:
    - rustup component add rustfmt-preview
    script:
    - cargo fmt --all -- --check `find src -iname "*.rs"`
    - docker run --security-opt seccomp=unconfined -v "$PWD:/volume" xd009642/tarpaulin
      cargo tarpaulin --ciserver travis-ci --coveralls $TRAVIS_JOB_ID
  allow_failures:
    - rust: nightly
  fast_finish: true
before_install:
- if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then sudo apt-get update -qq; fi
install:
- "./travis/toolchain_setup.sh"
- if [[ "$TARGET" = *"android"* ]]; then export PATH="$PATH:$PWD/cross/bin"; fi
script: "./travis/build.sh"
before_deploy: "./travis/deploy_setup.sh"
notifications:
  email:
    on_success: never
deploy:
  provider: releases
  api_key:
    secure: TU3ZnaluAtciaAvjBseLZvz5WOXd1/FgxngVinXI0ZSbq6yT6RGFbkddjqjTgTL9c0MyPcaHzXhk9r+aCB8iGaNmCfzos0NwpOAtM9Gn/dQZkO2l4FC0QWX2dZUGll9aeNvXdO7Xq8RopWebNvNd3Gntgf9n+G4LjiQKmQRe8JiuDKdABk78tjj0I+9uy6LoJjokewdjEh9wIAP13jYdBtyPbHkpQ0opLrJ4UZHsTWx6Vjj2qOznjcV/BWN2aOEtU4ZLgNGOXg1tQeJo+bq3dmS3GDsE2rAdXIRqBQEuSsgQKBx1EoXKx6VKj8/i1HyAH3JM/s5trnVjxn26CEb5IFfWEk9oVilcO2/vJcP1biMjfYKo4WSwC7e8xONURnJjm/3g7MBLvtKv/kXNmC5YQFf6XAF7OEVD30c0dWvjEJjMz5rZXE3InDjILx8D/Wai70ECUfrJgUnRbexHqk81IwIE6zNmByyEZFH+FlZaruuz5SUeQ2Caa8S7Iqcb8oZhJ9XEmgcnIXZ4N8thAtYd/cWmoJcBH8B4G/11S/TA7qkN2szkPIrd+i+KYhxDh4qHxWkMlnHgJevuwlmYKZn9fnZSxPtqllYTJepRWQ8X7D3R3tgNc+iQJjAjrh8Rehz8mNs7eK0stBlNB33eTq2PtivBC3kZOB8tAiEmQ5ltBTc=
  file: releases/*
  file_glob: true
  skip_cleanup: true
  on:
    repo: mesalock-linux/mesalink
    tags: true
